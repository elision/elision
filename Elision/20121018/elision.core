<?xml version='1.0' encoding='utf-8'?>
<elision-core msg="Internal error." when="Fri Oct 26 16:26:10 EDT 2012">
      		<error message="assertion failed"><item>scala.Predef$.assert(Predef.scala:89)</item><item>scala.tools.nsc.symtab.SymbolTable.phase_$eq(SymbolTable.scala:61)</item><item>scala.tools.nsc.symtab.SymbolTable.atPhase(SymbolTable.scala:94)</item><item>scala.tools.nsc.transform.SpecializeTypes.specializedTypeVars(SpecializeTypes.scala:330)</item><item>scala.tools.nsc.transform.SpecializeTypes.scala$tools$nsc$transform$SpecializeTypes$$needsSpecialization(SpecializeTypes.scala:315)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializedClass$1$2.apply(SpecializeTypes.scala:558)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializedClass$1$2.apply(SpecializeTypes.scala:558)</item><item>scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:704)</item><item>scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)</item><item>scala.collection.immutable.List.foreach(List.scala:45)</item><item>scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:703)</item><item>scala.tools.nsc.transform.SpecializeTypes.specializedClass$1(SpecializeTypes.scala:558)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializeClass$1.apply(SpecializeTypes.scala:689)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializeClass$1.apply(SpecializeTypes.scala:688)</item><item>scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)</item><item>scala.collection.immutable.List.foreach(List.scala:45)</item><item>scala.tools.nsc.transform.SpecializeTypes.specializeClass(SpecializeTypes.scala:688)</item><item>scala.tools.nsc.transform.SpecializeTypes.transformInfo(SpecializeTypes.scala:1055)</item><item>scala.tools.nsc.transform.InfoTransform$Phase$$anon$1.transform(InfoTransform.scala:38)</item><item>scala.tools.nsc.symtab.Symbols$Symbol.rawInfo(Symbols.scala:794)</item><item>scala.tools.nsc.symtab.Symbols$Symbol.typeParams(Symbols.scala:915)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$5.apply(SpecializeTypes.scala:219)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$5.apply(SpecializeTypes.scala:213)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializedParents$1$1$$anonfun$9.apply(SpecializeTypes.scala:484)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializedParents$1$1$$anonfun$9.apply(SpecializeTypes.scala:484)</item><item>scala.tools.nsc.symtab.SymbolTable.atPhase(SymbolTable.scala:95)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializedParents$1$1.apply(SpecializeTypes.scala:484)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializedParents$1$1.apply(SpecializeTypes.scala:482)</item><item>scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)</item><item>scala.collection.immutable.List.foreach(List.scala:45)</item><item>scala.tools.nsc.transform.SpecializeTypes.specializedParents$1(SpecializeTypes.scala:482)</item><item>scala.tools.nsc.transform.SpecializeTypes.specializedClass$1(SpecializeTypes.scala:498)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializeClass$1.apply(SpecializeTypes.scala:689)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$specializeClass$1.apply(SpecializeTypes.scala:688)</item><item>scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)</item><item>scala.collection.immutable.List.foreach(List.scala:45)</item><item>scala.tools.nsc.transform.SpecializeTypes.specializeClass(SpecializeTypes.scala:688)</item><item>scala.tools.nsc.transform.SpecializeTypes.transformInfo(SpecializeTypes.scala:1055)</item><item>scala.tools.nsc.transform.InfoTransform$Phase$$anon$1.transform(InfoTransform.scala:38)</item><item>scala.tools.nsc.symtab.Symbols$Symbol.rawInfo(Symbols.scala:794)</item><item>scala.tools.nsc.symtab.Symbols$Symbol.info(Symbols.scala:737)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$transformInfo$2$$anonfun$apply$29.apply(SpecializeTypes.scala:1059)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anonfun$transformInfo$2$$anonfun$apply$29.apply(SpecializeTypes.scala:1059)</item><item>scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)</item><item>scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)</item><item>scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)</item><item>scala.collection.immutable.List.foreach(List.scala:45)</item><item>scala.collection.TraversableLike$class.map(TraversableLike.scala:194)</item><item>scala.collection.immutable.List.map(List.scala:45)</item><item>scala.tools.nsc.transform.SpecializeTypes.transformInfo(SpecializeTypes.scala:1059)</item><item>scala.tools.nsc.transform.InfoTransform$Phase$$anon$1.transform(InfoTransform.scala:38)</item><item>scala.tools.nsc.symtab.Symbols$Symbol.rawInfo(Symbols.scala:794)</item><item>scala.tools.nsc.symtab.Symbols$Symbol.info(Symbols.scala:737)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.makeSpecializedMembers(SpecializeTypes.scala:1549)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1343)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:875)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:767)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:766)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:765)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:891)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:889)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:799)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:799)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTrees(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:837)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1261)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTrees(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:837)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTrees(Trees.scala:873)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:875)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:767)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:766)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:765)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTrees(Trees.scala:873)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:875)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:767)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:766)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:765)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTrees(Trees.scala:873)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:875)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:767)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:766)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:765)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTrees(Trees.scala:873)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:875)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:767)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:766)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:765)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformTrees$1.apply(Trees.scala:873)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTrees(Trees.scala:873)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$16.apply(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1352)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:875)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:767)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$2.apply(Trees.scala:766)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)</item><item>scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:765)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1473)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:891)</item><item>scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:889)</item><item>scala.collection.immutable.List.loop$1(List.scala:117)</item><item>scala.collection.immutable.List.mapConserve(List.scala:133)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$15.apply(SpecializeTypes.scala:1339)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6$$anonfun$transform$15.apply(SpecializeTypes.scala:1337)</item><item>scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)</item><item>scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)</item><item>scala.tools.nsc.transform.SpecializeTypes$$anon$6.transform(SpecializeTypes.scala:1337)</item><item>scala.tools.nsc.transform.SpecializeTypes$SpecializationTransformer$$anonfun$transform$37.apply(SpecializeTypes.scala:1692)</item><item>scala.tools.nsc.transform.SpecializeTypes$SpecializationTransformer$$anonfun$transform$37.apply(SpecializeTypes.scala:1692)</item><item>scala.tools.nsc.symtab.SymbolTable.atPhase(SymbolTable.scala:95)</item><item>scala.tools.nsc.transform.SpecializeTypes$SpecializationTransformer.transform(SpecializeTypes.scala:1692)</item><item>scala.tools.nsc.ast.Trees$Transformer.transformUnit(Trees.scala:892)</item><item>scala.tools.nsc.transform.Transform$Phase.apply(Transform.scala:30)</item><item>scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:329)</item><item>scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:297)</item><item>scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:297)</item><item>scala.collection.Iterator$class.foreach(Iterator.scala:660)</item><item>scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:316)</item><item>scala.tools.nsc.Global$GlobalPhase.run(Global.scala:297)</item><item>scala.tools.nsc.Global$Run.compileSources(Global.scala:953)</item><item>scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compileAndSaveRun(IMain.scala:756)</item><item>scala.tools.nsc.interpreter.IMain$ReadEvalPrint.compile(IMain.scala:731)</item><item>scala.tools.nsc.interpreter.IMain$Request.compile(IMain.scala:873)</item><item>scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:576)</item><item>scala.tools.nsc.interpreter.IMain.interpret(IMain.scala:543)</item><item>ornl.elision.core.TypedSymbolicOperator$$anonfun$3.apply(Operator.scala:497)</item><item>ornl.elision.core.TypedSymbolicOperator$$anonfun$3.apply(Operator.scala:497)</item><item>scala.tools.nsc.interpreter.IMain.beQuietDuring(IMain.scala:200)</item><item>ornl.elision.core.TypedSymbolicOperator$.apply(Operator.scala:497)</item><item>ornl.elision.core.Operator$.apply(Operator.scala:163)</item><item>ornl.elision.core.SpecialForm$.apply(SpecialForm.scala:329)</item><item>ornl.elision.parse.AtomParser$SpecialFormNode.interpret(AtomParser.scala:752)</item><item>ornl.elision.parse.AtomParser$ApplicationNode.interpret(AtomParser.scala:264)</item><item>ornl.elision.parse.Processor$$anonfun$_execute$1.apply(Processor.scala:260)</item><item>ornl.elision.parse.Processor$$anonfun$_execute$1.apply(Processor.scala:246)</item><item>scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)</item><item>scala.collection.immutable.List.foreach(List.scala:45)</item><item>ornl.elision.parse.Processor._execute(Processor.scala:246)</item><item>ornl.elision.parse.Processor.read(Processor.scala:176)</item><item>ornl.elision.parse.Processor.read(Processor.scala:147)</item><item>ornl.elision.repl.ERepl.bootstrap(ERepl.scala:377)</item><item>ornl.elision.repl.ERepl.run(ERepl.scala:432)</item><item>ornl.elision.gui.elision.EliReplThread.runNewRepl(EliReplThread.scala:59)</item><item>ornl.elision.gui.elision.EliReplThread.run(EliReplThread.scala:53)</item></error>
      		<binds>{ binds }</binds>
      		<operator-library>{: operator: SYMBOL { binds name -&gt; LIST: SYMBOL description -&gt; &quot;List type constructor.&quot; evenmeta -&gt; false params -&gt; %($type) detail -&gt; &quot;This operator is used to indicate the type of a list.  It takes a single argument that is the type of the atoms in the list.  For heterogeneous lists this will be ANY.\n \nDeclared in: bootstrap/Boot.eli&quot; type -&gt; ANY } :}
{: operator: SYMBOL { binds name -&gt; xx: SYMBOL description -&gt; &quot;Cross product.&quot; evenmeta -&gt; false params -&gt; %A($x, $y) detail -&gt; &quot;This operator is used to construct types for operators.  It indicates the cross product of two atoms (typically types).  These originate from the types of the parameters of an operator.\n \nDeclared in: bootstrap/Boot.eli&quot; type -&gt; ANY } :}
{: operator: SYMBOL { binds name -&gt; MAP: SYMBOL description -&gt; &quot;Mapping constructor.&quot; evenmeta -&gt; false params -&gt; %($domain, $codomain) detail -&gt; &quot;This operator is used to construct types for operators.  It indicates a mapping from one type (the domain) to another type (the codomain).\n \nDeclared in: bootstrap/Boot.eli&quot; type -&gt; ANY } :}
</operator-library>
      		<rule-library></rule-library>
      		<history>1: :quit
2: // Ended normally: Fri Jul 06 13:28:56 EDT 2012
3: // New Session: Fri Jul 06 13:29:09 EDT 2012 Running: 0.2, build 201207061328
4: loadcoredump(&quot;elision.core&quot;)
5: :quit
6: // Ended normally: Fri Jul 06 13:34:51 EDT 2012
7: // New Session: Fri Jul 06 13:43:22 EDT 2012 Running: 0.2, build 201207061342
8: loadcoredump(&quot;elision.core&quot;)
9: :quit
10: // Ended normally: Fri Jul 06 13:47:52 EDT 2012
11: // New Session: Fri Jul 06 13:47:59 EDT 2012 Running: 0.2, build 201207061342
12: help()
13: :quit
14: // Ended normally: Fri Jul 06 13:52:24 EDT 2012
15: // New Session: Fri Jul 06 13:54:09 EDT 2012 Running: 0.2, build 201207061353
16: inc(&quot;files_inc.eli&quot;)
17: fail()
18: :quit
19: // Ended normally: Fri Jul 06 13:55:26 EDT 2012
20: // New Session: Fri Jul 06 13:55:30 EDT 2012 Running: 0.2, build 201207061353
21: loadcoredump(&quot;elision.core&quot;)
22: :quit
23: // Ended normally: Fri Jul 06 13:59:18 EDT 2012
24: // New Session: Fri Jul 06 14:00:52 EDT 2012 Running: 0.2, build 201207061359
25: inc(&quot;file_inc.eli&quot;)
26: inc(&quot;files_inc.eli&quot;)
27: fail()
28: :quit
29: // Ended normally: Fri Jul 06 14:02:18 EDT 2012
30: // New Session: Fri Jul 06 14:02:20 EDT 2012 Running: 0.2, build 201207061359
31: loadcoredump(&quot;elision.core&quot;)
32: :quit
33: // Ended normally: Fri Jul 06 14:05:52 EDT 2012
34: // New Session: Fri Jul 06 14:05:56 EDT 2012 Running: 0.2, build 201207061359
35: :quit
36: // New Session: Fri Jul 06 14:06:59 EDT 2012 Running: 0.2, build 201207061359
37: $alice = true
38: bind($alice, true)
39: bind($bob, 11)
40: bind($carol, false)
41: bind($dave, 42)
42: fail()
43: :quit
44: // New Session: Fri Jul 06 14:08:56 EDT 2012 Running: 0.2, build 201207061359
45: loadcoredump(&quot;elision.core&quot;)
46: // New Session: Fri Jul 06 14:14:52 EDT 2012 Running: 0.2, build 201207061414
47: bind($alice,true)
48: bind($bob,11)
49: bind($carol,false)
50: bind($dave,42)
51: fail()
52: :quit
53: // New Session: Fri Jul 06 14:15:53 EDT 2012 Running: 0.2, build 201207061414
54: loadcoredump(&quot;elision.core&quot;)
55: // New Session: Fri Jul 06 14:25:32 EDT 2012 Running: 0.2, build 201207061414
56: fail()
57: // New Session: Thu Jul 12 16:20:15 EDT 2012 Running: 0.2, build 201207121619
58: // Ended normally: Thu Jul 12 16:20:26 EDT 2012
59: // New Session: Thu Jul 12 16:22:03 EDT 2012 Running: 0.2, build 201207121619
60: // Ended normally: Thu Jul 12 16:22:14 EDT 2012
61: // New Session: Thu Jul 12 16:26:58 EDT 2012 Running: 0.2, build 201207121619
62: // Ended normally: Thu Jul 12 16:27:09 EDT 2012
63: // New Session: Thu Jul 12 16:28:18 EDT 2012 Running: 0.2, build 201207121619
64: // Ended normally: Thu Jul 12 16:28:28 EDT 2012
65: // New Session: Thu Jul 12 16:29:08 EDT 2012 Running: 0.2, build 201207121628
66: // Ended normally: Thu Jul 12 16:29:18 EDT 2012
67: // New Session: Thu Jul 12 16:30:07 EDT 2012 Running: 0.2, build 201207121629
68: // Ended normally: Thu Jul 12 16:30:18 EDT 2012
69: // New Session: Thu Jul 12 16:31:18 EDT 2012 Running: 0.2, build 201207121630
70: help()
71: savecheckpt
72: savecheckpt()
73: displaycheckpts()
74: inc(&quot;files_inc.eli&quot;)
75: savecheckpt()
76: help()
77: loadcheckpt(0)
78: help()
79: loadcheckpt(1)
80: help()
81: help(abs)
82: abs(-5)
83: binds()
84: bindings()
85: showbinds()
86: bind($alice, true)
87: bind($bob, 11)
88: bind($carol, false)
89: bind($dave, 42)
90: showbinds()
91: savecheckpt()
92: loadcheckpt(0)
93: displaycheckpts()
94: showbinds()
95: $alice
96: bind($alice, false)
97: $alice
98: abs(-5)
99: help()
100: add(1,1)
101: :quit
102: // Ended normally: Thu Jul 12 16:37:00 EDT 2012
103: // New Session: Thu Jul 12 16:37:02 EDT 2012 Running: 0.2, build 201207121630
104: abs(-5)
105: :quit
106: // Ended normally: Thu Jul 12 16:37:20 EDT 2012
107: // New Session: Thu Jul 12 16:39:59 EDT 2012 Running: 0.2, build 201207121639
108: help()
109: showbinds()
110: savecheckpt()
111: inc(&quot;files_inc.eli&quot;)
112: help()
113: savecheckpt()
114: bind($alice, true)
115: bind($bob, 11)
116: bind($carol, false)
117: bind($dave, 42)
118: savecheckpt()
119: showbinds
120: showbinds()
121: displaycheckpts()
122: loadcheckpt(0)
123: help()
124: abs(-5)
125: $alice
126: showbinds()
127: add(1,1)
128: loadcheckpt(2)
129: loadcheckpt(5)
130: showbinds()
131: $alice
132: help()
133: :quit
134: // Ended normally: Thu Jul 12 16:44:12 EDT 2012
135: // New Session: Thu Jul 12 16:44:43 EDT 2012 Running: 0.2, build 201207121639
136: // New Session: Thu Jul 12 16:45:37 EDT 2012 Running: 0.2, build 201207121639
137: displaycheckpts()
138: savecheckpt()
139: inc(&quot;files_inc.eli&quot;)
140: bind($alice, true)
141: showbinds()
142: savecheckpt()
143: loadcheckpt(0)
144: abs(-5)
145: // New Session: Fri Jul 13 12:53:11 EDT 2012 Running: 0.2, build 201207131251
146: help()
147: :quit
148: // Ended normally: Fri Jul 13 12:53:41 EDT 2012
149: // New Session: Fri Jul 13 12:55:22 EDT 2012 Running: 0.2, build 201207131254
150: // New Session: Thu Jul 19 10:27:49 EDT 2012 Running: 0.2, build 201207191015
151: // New Session: Thu Jul 19 10:28:02 EDT 2012 Running: 0.2, build 201207191015
152: herp
153: derp
154: merp
155: // New Session: Thu Jul 19 10:29:15 EDT 2012 Running: 0.2, build 201207191015
156: lolwut
157: // New Session: Thu Jul 19 10:34:48 EDT 2012 Running: 0.2, build 201207191034
158: herp
159: // New Session: Thu Jul 19 10:35:04 EDT 2012 Running: 0.2, build 201207191034
160: derp
161: herp
162: // New Session: Thu Jul 19 10:39:02 EDT 2012 Running: 0.2, build 201207191034
163: // New Session: Thu Jul 19 11:00:55 EDT 2012 Running: 0.2, build 201207191100
164: inc(&quot;files_inc.eli&quot;)
165: // New Session: Thu Jul 19 11:13:56 EDT 2012 Running: 0.2, build 201207191113
166: inc(&quot;files_inc.eli&quot;)
167: help()
168: // New Session: Thu Jul 19 11:20:34 EDT 2012 Running: 0.2, build 201207191119
169: help()
170: :quit
171: // New Session: Thu Jul 19 11:21:07 EDT 2012 Running: 0.2, build 201207191119
172: help()
173: :quit
174: // Ended normally: Thu Jul 19 11:21:28 EDT 2012
175: // New Session: Thu Jul 19 11:24:49 EDT 2012 Running: 0.2, build 201207191119
176: help()
177: // New Session: Thu Jul 19 11:33:18 EDT 2012 Running: 0.2, build 201207191119
178: help()
179: // New Session: Thu Jul 19 12:19:59 EDT 2012 Running: 0.2, build 201207191217
180: // New Session: Thu Jul 19 12:21:52 EDT 2012 Running: 0.2, build 201207191221
181: help()
182: // New Session: Thu Jul 19 12:28:03 EDT 2012 Running: 0.2, build 201207191222
183: herp
184: help()
185: // New Session: Thu Jul 19 12:31:51 EDT 2012 Running: 0.2, build 201207191231
186: help()
187: // New Session: Thu Jul 19 12:37:28 EDT 2012 Running: 0.2, build 201207191237
188: help()
189: // New Session: Thu Jul 19 12:41:51 EDT 2012 Running: 0.2, build 201207191240
190: // New Session: Thu Jul 19 12:50:04 EDT 2012 Running: 0.2, build 201207191248
191: help()
192: // New Session: Thu Jul 19 12:53:13 EDT 2012 Running: 0.2, build 201207191252
193: help()
194: // New Session: Thu Jul 19 13:04:22 EDT 2012 Running: 0.2, build 201207191303
195: // New Session: Thu Jul 19 13:06:13 EDT 2012 Running: 0.2, build 201207191305
196: help()
197: // New Session: Thu Jul 19 16:22:37 EDT 2012 Running: 0.2, build 201207191621
198: herp
199: // New Session: Thu Jul 19 16:25:10 EDT 2012 Running: 0.2, build 201207191624
200: // New Session: Thu Jul 19 16:25:41 EDT 2012 Running: 0.2, build 201207191624
201: // New Session: Thu Jul 19 16:28:00 EDT 2012 Running: 0.2, build 201207191627
202: // New Session: Thu Jul 19 16:29:03 EDT 2012 Running: 0.2, build 201207191628
203: // New Session: Thu Jul 19 16:33:31 EDT 2012 Running: 0.2, build 201207191633
204: herp derp
205: // New Session: Thu Jul 19 16:35:16 EDT 2012 Running: 0.2, build 201207191634
206: // New Session: Thu Jul 19 16:42:49 EDT 2012 Running: 0.2, build 201207191641
207: // New Session: Thu Jul 19 16:46:05 EDT 2012 Running: 0.2, build 201207191645
208: // New Session: Thu Jul 19 16:47:01 EDT 2012 Running: 0.2, build 201207191646
209: // New Session: Thu Jul 19 16:57:15 EDT 2012 Running: 0.2, build 201207191656
210: // New Session: Thu Jul 19 16:59:28 EDT 2012 Running: 0.2, build 201207191659
211: // New Session: Thu Jul 19 17:00:30 EDT 2012 Running: 0.2, build 2012071
212: // New Session: Mon Aug 06 14:03:53 EDT 2012 Running: 0.2, build 201208061402
213: inc(&quot;files_inc.eli&quot;)
214: herp derp
215: // Ended normally: Mon Aug 06 14:08:08 EDT 2012
216: // New Session: Mon Aug 06 14:08:11 EDT 2012 Running: 0.2, build 201208061402
217: :quit
218: // Ended normally: Mon Aug 06 14:08:18 EDT 2012
219: // New Session: Mon Aug 06 14:08:25 EDT 2012 Running: 0.2, build 201208061402
220: herp derp
221: // New Session: Mon Aug 06 14:20:25 EDT 2012 Running: 0.2, build 201208061413
222: herp derp
223: inc(&quot;files_inc.eli&quot;)
224: // Ended normally: Mon Aug 06 14:21:54 EDT 2012
225: // New Session: Mon Aug 06 14:21:54 EDT 2012 Running: 0.2, build 201208061413
226: herp derp
227: // New Session: Mon Aug 06 14:22:46 EDT 2012 Running: 0.2, build 201208061413
228: herp derp
229: // New Session: Mon Aug 06 14:26:13 EDT 2012 Running: 0.2, build 201208061413
230: // New Session: Mon Aug 06 14:40:35 EDT 2012 Running: 0.2, build 201208061413
231: inc(&quot;files_inc.eli&quot;)
232: fail()
233: or(true,false)
234: help()
235: :quit
236: // Ended normally: Mon Aug 06 14:45:56 EDT 2012
237: // New Session: Mon Aug 06 15:03:12 EDT 2012 Running: 0.2, build 201208061413
238: savecheckpt()
239: inc(&quot;files_inc.eli&quot;)
240: savecheckpt()
241: help()
242: or(true,false)
243: loadcheckpt(0)
244: help()
245: or(true,false)
246: showcheckpts
247: showcheckpts()
248: :quit
249: // Ended normally: Mon Aug 06 16:33:59 EDT 2012
250: // New Session: Mon Aug 06 16:34:05 EDT 2012 Running: 0.2, build 201208061413
251: // New Session: Tue Aug 07 10:20:38 EDT 2012 Running: 0.2, build 201208061413
252: inc(&quot;files_inc.eli
253: &quot;)
254: inc(&quot;files_inc.eli&quot;)
255: // New Session: Tue Aug 07 10:29:59 EDT 2012 Running: 0.2, build 201208071028
256: herp derp
257: inc(&quot;files_inc.eli&quot;)
258: inc(&quot;../testCCA.eli&quot;)
259: herp derp
260: derp
261: // New Session: Tue Aug 07 10:39:54 EDT 2012 Running: 0.2, build 201208071039
262:  
263: herp
264: herp derp
265:  
266: // New Session: Tue Aug 07 10:46:25 EDT 2012 Running: 0.2, build 201208071045
267: herp
268: asdf
269: derp
270: // New Session: Tue Aug 07 10:48:31 EDT 2012 Running: 0.2, build 201208071047
271: herp
272: // New Session: Tue Aug 07 10:50:41 EDT 2012 Running: 0.2, build 201208071049
273: herp
274: derp
275: // New Session: Tue Aug 07 10:52:29 EDT 2012 Running: 0.2, build 201208071051
276: // New Session: Tue Aug 07 11:00:14 EDT 2012 Running: 0.2, build 201208071051
277: inc(&quot;files_inc.eli&quot;)
278: or(true,false)
279: // Ended normally: Tue Aug 07 11:01:20 EDT 2012
280: // New Session: Tue Aug 07 11:01:23 EDT 2012 Running: 0.2, build 201208071051
281: or(true,false)
282: help()
283: savecheckpt()
284: inc(&quot;files_inc.eli&quot;)
285: herp
286: herp derp
287: inc(&quot;files_inc.eli&quot;)
288: // Ended normally: Tue Aug 07 11:05:37 EDT 2012
289: // New Session: Tue Aug 07 11:05:37 EDT 2012 Running: 0.2, build 201208071051
290: inc(&quot;files_inc.eli&quot;)
291: // New Session: Tue Aug 07 11:10:05 EDT 2012 Running: 0.2, build 201208071051
292: herp derp
293: inc(&quot;files_inc.eli&quot;)
294: or(false, true)
295: herp derp
296: or(false, true)
297: true
298: // New Session: Tue Aug 07 11:15:41 EDT 2012 Running: 0.2, build 201208071051
299: inc(&quot;files_inc.eli&quot;)
300: // Ended normally: Tue Aug 07 11:17:20 EDT 2012
301: // New Session: Tue Aug 07 11:18:05 EDT 2012 Running: 0.2, build 201208071051
302: inc(&quot;files_inc.eli&quot;)
303: // New Session: Wed Aug 08 15:14:06 EDT 2012 Running: 0.2, build 201208081512
304: inc(&quot;files_inc.eli&quot;)
305: herp derp
306: // New Session: Wed Aug 08 15:21:23 EDT 2012 Running: 0.2, build 201208081520
307: inc(&quot;files_inc.eli&quot;)
308: // New Session: Wed Aug 08 15:37:51 EDT 2012 Running: 0.2, build 201208081520
309: // New Session: Wed Aug 08 15:38:00 EDT 2012 Running: 0.2, build 201208071051
310: :quit
311: // Ended normally: Wed Aug 08 15:38:12 EDT 2012
312: // New Session: Wed Aug 08 15:38:17 EDT 2012 Running: 0.2, build 201208071051
313: inc(&quot;files_inc.eli&quot;)
314: // New Session: Thu Aug 09 12:22:24 EDT 2012 Running: 0.2, build 201208071051
315: inc(&quot;files_inc.eli&quot;)
316: add(1,add(3,5),add(3,5))
317: and(true, $alice)
318: or(false,true)
319: and($alice, $bob)
320: $alice
321: and($Alice, $Bob)
322: and(false,and($Alice, $Bob))
323: andd(false,andd($Alice, $Bob))
324: // New Session: Thu Aug 09 13:53:26 EDT 2012 Running: 0.2, build 201208071051
325: inc(&quot;files_inc.eli&quot;)
326: // New Session: Thu Aug 09 14:14:27 EDT 2012 Running: 0.2, build 201208071051
327: inc(&quot;files_inc.eli&quot;)
328: or(true)
329: decl.{rule 17 -&gt; 42 #rulesets DEFAULT }
330: 17
331: add(1,add(3,5),add(5,3))
332: add(mul(2,7),1)
333: help(mult)
334: add(mult(2,7),1)
335: add(mult(2,8),1)
336: // New Session: Thu Aug 09 15:14:25 EDT 2012 Running: 0.2, build 201208091513
337: inc(&quot;files_inc.eli&quot;)
338: add(1,1,1)
339: // New Session: Thu Aug 09 15:19:35 EDT 2012 Running: 0.2, build 201208091518
340: inc(&quot;files_inc.eli&quot;)
341: add(1,1,1)
342: and(true)
343: // New Session: Thu Aug 09 15:50:08 EDT 2012 Running: 0.2, build 201208091549
344: inc(&quot;files_inc.eli&quot;)
345: not(and(true,$Alice,$Bob))
346: // New Session: Thu Aug 09 16:30:38 EDT 2012 Running: 0.2, build 201208091549
347: // New Session: Thu Aug 09 16:31:08 EDT 2012 Running: 0.2, build 201208091549
348: // New Session: Thu Aug 09 16:33:06 EDT 2012 Running: 0.2, build 201208091632
349: // New Session: Thu Aug 09 16:37:06 EDT 2012 Running: 0.2, build 201208091636
350: inc(&quot;files_inc.eli&quot;)
351: // New Session: Thu Aug 09 16:39:53 EDT 2012 Running: 0.2, build 201208091639
352: 5
353: // New Session: Thu Aug 09 16:45:12 EDT 2012 Running: 0.2, build 201208091644
354: 5
355: // New Session: Thu Aug 09 16:49:12 EDT 2012 Running: 0.2, build 201208091648
356: 5
357: INTEGER
358: // New Session: Thu Aug 09 16:54:31 EDT 2012 Running: 0.2, build 201208091653
359: or(true,false)
360: add(1,1)
361: not(and(true,$x))
362: 5
363: &quot;What is the answer to life, the universe, and everything?&quot;
364: // New Session: Fri Aug 10 09:57:03 EDT 2012 Running: 0.2, build 201208100956
365: // New Session: Fri Aug 10 10:38:50 EDT 2012 Running: 0.2, build 201208100958
366: inc(&quot;files_inc.eli&quot;)
367: 5
368: INTEGER
369: 5
370: INTEGER
371: // New Session: Fri Aug 10 10:50:15 EDT 2012 Running: 0.2, build 201208101049
372: 5
373: // New Session: Fri Aug 10 10:56:18 EDT 2012 Running: 0.2, build 201208101055
374: 5
375: // New Session: Fri Aug 10 12:46:23 EDT 2012 Running: 0.2, build 201208101244
376: 5
377: // New Session: Fri Aug 10 12:49:05 EDT 2012 Running: 0.2, build 201208101248
378: 5
379: INTEGER
380: // New Session: Fri Aug 10 13:01:07 EDT 2012 Running: 0.2, build 201208101248
381: 5
382: // New Session: Fri Aug 10 13:11:53 EDT 2012 Running: 0.2, build 201208101311
383: // New Session: Fri Aug 10 13:15:03 EDT 2012 Running: 0.2, build 201208101314
384: // New Session: Fri Aug 10 13:16:51 EDT 2012 Running: 0.2, build 201208101316
385: // New Session: Fri Aug 10 13:18:54 EDT 2012 Running: 0.2, build 201208101318
386: // New Session: Fri Aug 10 13:24:35 EDT 2012 Running: 0.2, build 201208101324
387: // New Session: Fri Aug 10 13:25:46 EDT 2012 Running: 0.2, build 201208101325
388: // New Session: Fri Aug 10 13:27:24 EDT 2012 Running: 0.2, build 201208101326
389: // New Session: Fri Aug 10 13:28:28 EDT 2012 Running: 0.2, build 201208101326
390: // New Session: Fri Aug 10 13:38:49 EDT 2012 Running: 0.2, build 201208101332
391: // New Session: Fri Aug 10 13:40:49 EDT 2012 Running: 0.2, build 201208101340
392: // New Session: Fri Aug 10 14:04:16 EDT 2012 Running: 0.2, build 201208101403
393: // New Session: Fri Aug 10 14:07:06 EDT 2012 Running: 0.2, build 201208101406
394: herp derp
395: // New Session: Fri Aug 10 14:09:48 EDT 2012 Running: 0.2, build 201208101408
396: // New Session: Fri Aug 10 14:11:26 EDT 2012 Running: 0.2, build 201208101410
397: // New Session: Fri Aug 10 14:17:50 EDT 2012 Running: 0.2, build 201208101412
398: 5
399: herp
400: // New Session: Fri Aug 10 14:54:54 EDT 2012 Running: 0.2, build 201208101453
401: // New Session: Fri Aug 10 14:56:53 EDT 2012 Running: 0.2, build 201208101456
402: herp derp
403: // New Session: Fri Aug 10 14:59:02 EDT 2012 Running: 0.2, build 201208101458
404: // New Session: Fri Aug 10 15:00:06 EDT 2012 Running: 0.2, build 201208101459
405: // New Session: Fri Aug 10 15:03:17 EDT 2012 Running: 0.2, build 201208101459
406: herpderp
407: herp
408: // New Session: Fri Aug 10 15:09:25 EDT 2012 Running: 0.2, build 201208101508
409: herp
410: // New Session: Fri Aug 10 15:19:20 EDT 2012 Running: 0.2, build 201208101518
411: // New Session: Fri Aug 10 15:24:00 EDT 2012 Running: 0.2, build 201208101522
412: // New Session: Fri Aug 10 15:27:28 EDT 2012 Running: 0.2, build 201208101526
413: // New Session: Fri Aug 10 15:28:44 EDT 2012 Running: 0.2, build 201208101528
414: herp derp
415: // New Session: Fri Aug 10 15:29:53 EDT 2012 Running: 0.2, build 201208101529
416: // New Session: Fri Aug 10 15:31:41 EDT 2012 Running: 0.2, build 201208101531
417: // New Session: Fri Aug 10 15:50:49 EDT 2012 Running: 0.2, build 201208101549
418: // New Session: Fri Aug 10 15:52:23 EDT 2012 Running: 0.2, build 201208101551
419: // New Session: Fri Aug 10 15:53:55 EDT 2012 Running: 0.2, build 201208101553
420: 5
421: // New Session: Fri Aug 10 15:55:58 EDT 2012 Running: 0.2, build 201208101555
422: 5
423: // New Session: Fri Aug 10 16:03:53 EDT 2012 Running: 0.2, build 201208101556
424: 5
425: // New Session: Fri Aug 17 13:43:57 EDT 2012 Running: 0.2, build 201208101556
426: inc(&quot;files_inc.eli&quot;)
427: &quot;What is the answer to life, the universe, and everything?&quot;
428: // New Session: Wed Sep 05 11:28:55 EDT 2012 Running: 0.2, build 201208220904
429: // New Session: Wed Sep 05 11:31:32 EDT 2012 Running: 0.2, build 201209051129
430: // New Session: Wed Sep 05 14:53:03 EDT 2012 Running: 0.2, build 201209051129
431: :quit
432: // Ended normally: Wed Sep 05 14:53:34 EDT 2012
433: // New Session: Thu Oct 18 10:27:49 EDT 2012 Running: 0.2, build 201210181025
434: // New Session: Thu Oct 18 10:29:37 EDT 2012 Running: 0.2, build 201210181025
435: // New Session: Thu Oct 18 10:33:56 EDT 2012 Running: 0.2, build 201210181025
436: // New Session: Thu Oct 18 10:37:19 EDT 2012 Running: 0.2, build 201210181025
437: // New Session: Thu Oct 18 11:06:46 EDT 2012 Running: 0.2, build 201210181025
438: // New Session: Thu Oct 18 11:17:02 EDT 2012 Running: 0.2, build 201210181025
439: -
440: // New Session: Thu Oct 18 11:19:34 EDT 2012 Running: 0.2, build 201210181025
441: inc(&quot;files_inc.eli&quot;)
442: // New Session: Thu Oct 18 11:21:29 EDT 2012 Running: 0.2, build 201210181025
443: // New Session: Thu Oct 18 11:26:51 EDT 2012 Running: 0.2, build 201210181025
444: inc(&quot;files_inc.eli&quot;)
445: // New Session: Thu Oct 18 11:31:02 EDT 2012 Running: 0.2, build 201210181025
446: inc(&quot;files_inc.eli&quot;)
447: // New Session: Thu Oct 18 11:47:18 EDT 2012 Running: 0.2, build 201210181025
448: not(not(not($Alice)))
449: not(not(not($x)))
450: // New Session: Thu Oct 18 13:17:01 EDT 2012 Running: 0.2, build 201210181025
451: not(not(not($x)))
452: // New Session: Thu Oct 18 14:57:05 EDT 2012 Running: 0.2, build 201210181025
453: // New Session: Thu Oct 18 15:05:45 EDT 2012 Running: 0.2, build 201210181025
454: // New Session: Thu Oct 18 15:28:16 EDT 2012 Running: 0.2, build 201210181025
455: // New Session: Thu Oct 18 15:59:20 EDT 2012 Running: 0.2, build 201210181025
456: not(not(not($x)))
457: // New Session: Thu Oct 18 16:03:04 EDT 2012 Running: 0.2, build 201210181025
458: // New Session: Fri Oct 26 14:38:58 EDT 2012 Running: 0.2, build 201210261437
459: // New Session: Fri Oct 26 14:40:13 EDT 2012 Running: 0.2, build 201210261437
460: // New Session: Fri Oct 26 14:43:22 EDT 2012 Running: 0.2, build 201210261441
461: inc(&quot;files_inc.eli&quot;)
462: // New Session: Fri Oct 26 15:47:10 EDT 2012 Running: 0.2, build 201210261546
463: // New Session: Fri Oct 26 15:48:16 EDT 2012 Running: 0.2, build 201210261547
464: // New Session: Fri Oct 26 15:48:42 EDT 2012 Running: 0.2, build 201210261547
465: // New Session: Fri Oct 26 15:51:04 EDT 2012 Running: 0.2, build 201210261550
466: // New Session: Fri Oct 26 15:54:03 EDT 2012 Running: 0.2, build 201210261552
467: // New Session: Fri Oct 26 15:55:56 EDT 2012 Running: 0.2, build 201210261555
468: inc(&quot;files_inc.eli&quot;)
469: // Ended normally: Fri Oct 26 15:58:14 EDT 2012
470: // New Session: Fri Oct 26 15:58:32 EDT 2012 Running: 0.2, build 201210261555
471: // New Session: Fri Oct 26 16:04:34 EDT 2012 Running: 0.2, build 201210261603
472: inc(&quot;files_inc.eli&quot;)
473: // New Session: Fri Oct 26 16:06:22 EDT 2012 Running: 0.2, build 201210261603
474: // New Session: Fri Oct 26 16:06:27 EDT 2012 Running: 0.2, build 201210261603
475: // Ended normally: Fri Oct 26 16:06:35 EDT 2012
476: // New Session: Fri Oct 26 16:06:48 EDT 2012 Running: 0.2, build 201210261603
477: // New Session: Fri Oct 26 16:10:49 EDT 2012 Running: 0.2, build 201210261609
478: // New Session: Fri Oct 26 16:10:58 EDT 2012 Running: 0.2, build 201210261609
479: // New Session: Fri Oct 26 16:11:19 EDT 2012 Running: 0.2, build 201210261609
480: // New Session: Fri Oct 26 16:11:57 EDT 2012 Running: 0.2, build 201210261609
481: // New Session: Fri Oct 26 16:12:04 EDT 2012 Running: 0.2, build 201210261609
482: // Ended normally: Fri Oct 26 16:12:09 EDT 2012
483: // New Session: Fri Oct 26 16:12:14 EDT 2012 Running: 0.2, build 201210261609
484: // Ended normally: Fri Oct 26 16:12:37 EDT 2012
485: // New Session: Fri Oct 26 16:12:38 EDT 2012 Running: 0.2, build 201210261609
486: // New Session: Fri Oct 26 16:12:47 EDT 2012 Running: 0.2, build 201210261609
487: // New Session: Fri Oct 26 16:14:29 EDT 2012 Running: 0.2, build 201210261613
488: // New Session: Fri Oct 26 16:14:35 EDT 2012 Running: 0.2, build 201210261613
489: // Ended normally: Fri Oct 26 16:14:44 EDT 2012
490: // New Session: Fri Oct 26 16:14:46 EDT 2012 Running: 0.2, build 201210261613
491: // New Session: Fri Oct 26 16:16:38 EDT 2012 Running: 0.2, build 201210261613
492: // New Session: Fri Oct 26 16:20:27 EDT 2012 Running: 0.2, build 201210261619
493: // New Session: Fri Oct 26 16:20:40 EDT 2012 Running: 0.2, build 201210261619
494: // New Session: Fri Oct 26 16:24:32 EDT 2012 Running: 0.2, build 201210261623
495: // Ended normally: Fri Oct 26 16:24:47 EDT 2012
496: // New Session: Fri Oct 26 16:24:47 EDT 2012 Running: 0.2, build 201210261623
497: // Ended normally: Fri Oct 26 16:24:54 EDT 2012
498: // New Session: Fri Oct 26 16:24:55 EDT 2012 Running: 0.2, build 201210261623
499: // Ended normally: Fri Oct 26 16:25:00 EDT 2012
500: // New Session: Fri Oct 26 16:25:07 EDT 2012 Running: 0.2, build 201210261623
501: // New Session: Fri Oct 26 16:26:07 EDT 2012 Running: 0.2, build 201210181025
</history>
      		</elision-core>