CHANGES
=======

Version 0.5 to Version 0.6
--------------------------
* Elision now has a bit string literal that can represent a fixed-length array
  of bits.  There is a library bootstrap/Bitstring.eli that can process these
  as signed / unsigned numbers in two's complement, construct and manipulate
  them in various ways.
* The parser has been rewritten for better performance.

Version 0.4 to Version 0.5
--------------------------
* BasicAtoms now keep track of their origin through the new Loc class.  This
  specifies where the atom was declared.
* There is now just a single parser, using Parboiled.
* Loading and saving of contexts is implemented (loadcontext and savecontext
  defined in bootstrap/Context.eli).
* Loading of the prior working context is implemented via the -p flag to repl.
* Creation of a compilable context (as Scala source) is possible via the -C
  flag to repl.
* Core dumps can be reloaded (loadcoredump defined in bootstrap/Context.eli).
* Lambda variables now preserve their meta-ness during conversion to de Bruijn
  indices.
* Inline operator definitions can now persist and be used.  More care is taken
  with operator references.  If the known operator changes the system will
  print the stored closure instead of the operator name, which would be wrong.
* Caching of compiled native handlers is implemented, for significant
  improvement in startup time.
* Lots of minor fixes and general improvements. 

Version 0.3 to Version 0.4
--------------------------
* Significant changes in the layout of the project.  Many classes have moved
  to other packages, and some (like OmitSeq) have been extracted into their own
  files.
* Third party libraries that were not used have been removed from the project.
  This includes kryo and cdb.
* Parboiled has been replaced with a new version: 1.1.4.

Version 0.2 to Version 0.3
--------------------------
* The system now supports specifying commands to execute on startup through the
  new ornl.elision.Main class.  The commands must be defined in the system's
  configuration.xml file, and can be abbreviated.
* Elision now includes the kryo library for serializing and reloading contexts.

Version 0.1 to Version 0.2
--------------------------
* No significant changes.  The version number was bumped for the release
  of FX2, which uses Elision.
* There is now a pager ("more") automatically used when output exceeds the
  screen size.
* Bug fixes for handling of "quiet."

Version 0.0 to Version 0.1
--------------------------
* The old REPL has been replaced with the new REPL.  Startup times are much
  slower, but lots of good customization is present and the system is more
  flexible.
* The system now supports properties, replacing many of the output control
  operators (like stacktrace and showscala).  Use listprops() to see the
  properties, and setprop(name,value) to set them.
* The system now uses a search path to find files.  The search path is
  given by the ELISION_PATH environment variable in the same style as any
  other path on your platform.
* Bootstrap files can be overridden by files in the search path.
* The system now reads the ELISIONRC environment variable to find a file
  to read after bootstrapping.  If this is not set, it looks for a
  .elisionrc or elision.ini in the home folder and reads that if found.
  The search path is used if ELISIONRC is specified and not absolute.

