inc("bootstrap/Test.eli")

_test_init()

_test(not(false), true)
_test(not(true), false)
_test(not(not($x)), $x)
_test(is_defined(not($x)), is_defined($x))

_test(and(false,false), false)
_test(and(false,true), false)
_test(and(true,false), false)
_test(and(true,true), true)
_test(and(true,$x), $x)
_test(and(and($x,and($y,$z)),$w), and($x,$y,$z,$w))
_test(is_defined(and(false,$x)), is_defined($x))
_test(is_defined(and($x,$y)), and(is_defined($x),is_defined($y)))

_test(or(false,false), false)
_test(or(false,true), true)
_test(or(true,false), true)
_test(or(true,true), true)
_test(or(false,$x), $x)
_test(or(or($x,or($y,$z)),$w), or($x,$y,$z,$w))
_test(is_defined(or(true,$x)), is_defined($x))
_test(is_defined(or($x,$y)), and(is_defined($x),is_defined($y)))

_test(lazy_and(false,false), false)
_test(lazy_and(false,true), false)
_test(lazy_and(true,false), false)
_test(lazy_and(true,true), true)
_test(lazy_and(false,$x), false)
_test(lazy_and(true,$x), $x)
_test(lazy_and(lazy_and($x,lazy_and($y,$z)),$w), lazy_and($x,$y,$z,$w))
_test(is_defined(lazy_and(diverge(BOOLEAN,$msg),false)), false)

_test(lazy_or(false,false), false)
_test(lazy_or(false,true), true)
_test(lazy_or(true,false), true)
_test(lazy_or(true,true), true)
_test(lazy_or(false,$x), $x)
_test(lazy_or(true,$x), true)
_test(lazy_or(lazy_or($x,lazy_or($y,$z)),$w), lazy_or($x,$y,$z,$w))
_test(is_defined(lazy_or(diverge(BOOLEAN,$msg),true)), false)

_test(xor(false,false), false)
_test(xor(false,true), true)
_test(xor(true,false), true)
_test(xor(true,true), false)
_test(xor(xor($x,xor($y,$z)),$w), xor($x,$y,$z,$w))
_test(is_defined(xor($x,$y)), and(is_defined($x),is_defined($y)))

_test(equiv(false,false), true)
_test(equiv(false,true), false)
_test(equiv(true,false), false)
_test(equiv(true,true), true)
_test(is_defined(equiv($x,$y)), and(is_defined($x),is_defined($y)))

_test(not_equiv(false,false), false)
_test(not_equiv(false,true), true)
_test(not_equiv(true,false), true)
_test(not_equiv(true,true), false)
_test(is_defined(not_equiv($x,$y)), and(is_defined($x),is_defined($y)))

_test(implies(false,false), true)
_test(implies(false,true), true)
_test(implies(true,false), false)
_test(implies(true,true), true)
_test(is_defined(implies(false,diverge(BOOLEAN,$msg))), false)
_test(is_defined(implies(diverge(BOOLEAN,$msg),true)), false)
_test(is_defined(implies($x,$y)), and(is_defined($x),is_defined($y)))

_test(lazy_implies(false,false), true)
_test(lazy_implies(false,true), true)
_test(lazy_implies(true,false), false)
_test(lazy_implies(true,true), true)
_test(lazy_implies(false,$x), true)
_test(lazy_implies(true,$x), $x)
_test(is_defined(lazy_implies(diverge(BOOLEAN,$msg),true)), false)

_test(int_is_zero(0), true)
_test(int_is_zero(1), false)
_test(int_is_zero(-1), false)
_test(is_defined(int_is_zero($x)), is_defined($x))

_test(int_is_nonzero(0), false)
_test(int_is_nonzero(1), true)
_test(int_is_nonzero(-1), true)
_test(is_defined(int_is_nonzero($x)), is_defined($x))

_test(int_is_positive(0), false)
_test(int_is_positive(1), true)
_test(int_is_positive(-1), false)
_test(is_defined(int_is_positive($x)), is_defined($x))

_test(int_is_negative(0), false)
_test(int_is_negative(1), false)
_test(int_is_negative(-1), true)
_test(is_defined(int_is_negative($x)), is_defined($x))

_test(int_is_nonnegative(0), true)
_test(int_is_nonnegative(1), true)
_test(int_is_nonnegative(-1), false)
_test(is_defined(int_is_nonnegative($x)), is_defined($x))

_test(int_is_nonpositive(0), true)
_test(int_is_nonpositive(1), false)
_test(int_is_nonpositive(-1), true)
_test(is_defined(int_is_nonpositive($x)), is_defined($x))

_test(int_is_even(0), true)
_test(int_is_even(1), false)
_test(int_is_even(2), true)
_test(int_is_even(-1), false)
_test(int_is_even(-2), true)
_test(is_defined(int_is_even($x)), is_defined($x))

_test(int_is_odd(0), false)
_test(int_is_odd(1), true)
_test(int_is_odd(2), false)
_test(int_is_odd(-1), true)
_test(int_is_odd(-2), false)
_test(is_defined(int_is_odd($x)), is_defined($x))

_test_status()

